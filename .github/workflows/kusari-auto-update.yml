name: Auto-apply Kusari Dependency Updates

on:
  check_run:
    types: [completed]
  workflow_dispatch:  # Allow manual triggering for testing
    inputs:
      pr_number:
        description: 'PR number to process'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  apply-kusari-updates:
    # Only run if the completed check was from Kusari Inspector
    if: |
      (github.event_name == 'check_run' && 
       github.event.check_run.name == 'Kusari Inspector' && 
       github.event.check_run.conclusion == 'success') ||
      github.event_name == 'workflow_dispatch'
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.check_run.head_sha || github.head_ref || github.ref }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Get PR Information
        id: pr_info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ inputs.pr_number }}" ]; then
            PR_NUMBER="${{ inputs.pr_number }}"
          elif [ "${{ github.event_name }}" == "check_run" ]; then
            # Get PR number from check run
            PR_NUMBER=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/commits/${{ github.event.check_run.head_sha }}/pulls \
              --jq '.[0].number')
          else
            echo "Could not determine PR number"
            exit 1
          fi
          
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "Processing PR #$PR_NUMBER"

      - name: Get Kusari Analysis Results
        id: kusari_results
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ steps.pr_info.outputs.pr_number }}"
          
          # Get the latest Kusari check run for this PR
          CHECK_RUN=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/${{ github.repository }}/commits/${{ github.event.check_run.head_sha || github.sha }}/check-runs" \
            --jq '.check_runs[] | select(.name == "Kusari Inspector") | select(.status == "completed")' | head -1)
          
          if [ -z "$CHECK_RUN" ]; then
            echo "No completed Kusari Inspector check found"
            exit 1
          fi
          
          # Extract the output from the check run
          CHECK_OUTPUT=$(echo "$CHECK_RUN" | jq -r '.output.text // empty')
          
          if [ -z "$CHECK_OUTPUT" ]; then
            echo "No Kusari output found in check run"
            echo "Attempting to fetch from PR comments..."
            
            # Alternative: Look for Kusari comment on the PR
            KUSARI_COMMENT=$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
              --jq '.[] | select(.user.login == "kusari-app[bot]" or .user.login == "kusari-inspector[bot]") | .body' | head -1)
            
            if [ -z "$KUSARI_COMMENT" ]; then
              echo "No Kusari analysis found"
              exit 1
            fi
            
            CHECK_OUTPUT="$KUSARI_COMMENT"
          fi
          
          # Save the output to a file
          echo "$CHECK_OUTPUT" > kusari_output.txt
          
          # Check if there are dependency updates needed
          if grep -q "Dependency Changes Introduced" kusari_output.txt && \
             grep -q "updated\|added" kusari_output.txt; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "Dependency updates found in Kusari analysis"
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "No dependency updates needed"
          fi

      - name: Apply Dependency Updates
        if: steps.kusari_results.outputs.has_updates == 'true'
        run: |
          echo "Applying Kusari dependency updates..."
          
          # Run the updater script
          python3 kusari_updater.py --file kusari_output.txt --skip-install
          
          # Check if package.json was modified
          if git diff --quiet package.json; then
            echo "No changes to package.json"
            echo "CHANGES_MADE=false" >> $GITHUB_ENV
          else
            echo "package.json was updated"
            echo "CHANGES_MADE=true" >> $GITHUB_ENV
          fi

      - name: Run npm install
        if: env.CHANGES_MADE == 'true'
        run: |
          echo "Running npm install to update package-lock.json..."
          npm install

      - name: Create Update Summary
        if: env.CHANGES_MADE == 'true'
        id: summary
        run: |
          # Extract summary of updates
          UPDATES=$(python3 -c "
          import re
          import json
          
          updates = []
          with open('kusari_output.txt', 'r') as f:
              content = f.read()
              
              # Find all updated packages
              pattern = r'([^â”‚]+?)\s+â”‚\s+updated\s+â”‚\s+([^â†’]+)\s+â†’\s+([^\sâ”‚]+)'
              for match in re.finditer(pattern, content):
                  pkg = match.group(1).strip()
                  old_ver = match.group(2).strip()
                  new_ver = match.group(3).strip()
                  # Filter out platform-specific packages
                  if not ('@rollup/rollup-' in pkg or '@esbuild/' in pkg):
                      updates.append(f'- {pkg}: {old_ver} â†’ {new_ver}')
          
          if updates:
              print('\\n'.join(updates[:10]))  # Limit to first 10
          ")
          
          # Count security fixes
          SECURITY_COUNT=$(grep -c "CVE-" kusari_output.txt || echo "0")
          
          # Create summary for commit message and PR comment
          {
            echo "summary<<EOF"
            echo "ðŸ¤– Auto-apply Kusari dependency updates"
            echo ""
            echo "Applied dependency updates from Kusari security analysis:"
            echo "$UPDATES"
            if [ "$SECURITY_COUNT" -gt "0" ]; then
              echo ""
              echo "ðŸ”’ Addresses $SECURITY_COUNT security vulnerabilities"
            fi
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Commit and Push Changes
        if: env.CHANGES_MADE == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add changes
          git add package.json package-lock.json
          
          # Create commit
          git commit -m "${{ steps.summary.outputs.summary }}" \
            -m "Automated update based on Kusari security analysis" \
            -m "PR: #${{ steps.pr_info.outputs.pr_number }}"
          
          # Push changes
          git push

      - name: Comment on PR
        if: env.CHANGES_MADE == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ steps.pr_info.outputs.pr_number }}"
          
          COMMENT_BODY=$(cat <<EOF
          ## ðŸ¤– Kusari Dependency Updates Applied
          
          I've automatically applied the dependency updates recommended by Kusari's security analysis.
          
          ### Changes Made:
          ${{ steps.summary.outputs.summary }}
          
          ### Next Steps:
          - Review the changes in the latest commit
          - Run your test suite to ensure everything works correctly
          - The PR is ready to merge once tests pass
          
          ---
          *This update was automatically applied by the Kusari Auto-Update workflow*
          EOF
          )
          
          gh pr comment "$PR_NUMBER" --body "$COMMENT_BODY"

      - name: No Updates Needed
        if: steps.kusari_results.outputs.has_updates == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "âœ… No dependency updates needed - all dependencies are up to date according to Kusari analysis"